---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: |
      kubectl apply -n $NAMESPACE -f - <<EOF
      apiVersion: zookeeper.stackable.tech/v1alpha1
      kind: ZookeeperZnode
      metadata:
        name: hdfs-znode
      spec:
        clusterRef:
          name: zookeeper
      ---
      apiVersion: hdfs.stackable.tech/v1alpha1
      kind: HdfsCluster
      metadata:
        name: hdfs
      spec:
        image:
          productVersion: "{{ test_scenario['values']['hdfs-latest'] }}"
        clusterConfig:
          zookeeperConfigMapName: hdfs-znode
          dfsReplication: 1
          authentication:
            tlsSecretClass: tls
            kerberos:
              secretClass: kerberos-$NAMESPACE
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
          vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
        nameNodes:
          config:
            listenerClass: {{ test_scenario['values']['listener-class'] }}
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          configOverrides: &configOverrides
            core-site.xml:
              # hadoop.user.group.static.mapping.overrides: "dr.who=;nn=;nm=;jn=;testuser=supergroup;hbase-master=supergroup;hbase-regionserver=supergroup;hbase-restserver=supergroup;"
              hadoop.user.group.static.mapping.overrides: "dr.who=;nn=;nm=;jn=;testuser=supergroup;hbase=supergroup"
          roleGroups:
            default:
              replicas: 2
        dataNodes:
          config:
            listenerClass: {{ test_scenario['values']['listener-class'] }}
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          configOverrides: *configOverrides
          roleGroups:
            default:
              replicas: 2
        journalNodes:
          config:
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          configOverrides: *configOverrides
          roleGroups:
            default:
              replicas: 3
      EOF
