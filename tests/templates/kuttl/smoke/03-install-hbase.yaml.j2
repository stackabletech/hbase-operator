---
apiVersion: hbase.stackable.tech/v1alpha1
kind: HbaseCluster
metadata:
  name: test-hbase
spec:
  image:
    productVersion: "{{ test_scenario['values']['hbase'].split('-stackable')[0] }}"
    stackableVersion: "{{ test_scenario['values']['hbase'].split('-stackable')[1] }}"
  hdfsConfigMapName: test-hdfs-namenode-default
  zookeeperConfigMapName: test-znode
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
  vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  config:
    hbaseRootdir: /hbase
  masters:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        configOverrides:
          hbase-site.xml:
            phoenix.log.saltBuckets: "2"
            hbase.regionserver.wal.codec: "org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec"
        replicas: 1
  regionServers:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        configOverrides:
          hbase-site.xml:
            phoenix.log.saltBuckets: "2"
            hbase.regionserver.wal.codec: "org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec"
        replicas: 1
  restServers:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        configOverrides:
          hbase-site.xml:
            phoenix.log.saltBuckets: "2"
            hbase.regionserver.wal.codec: "org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec"
        replicas: 1
