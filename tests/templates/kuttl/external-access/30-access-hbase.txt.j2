---
apiVersion: batch/v1
kind: Job
metadata:
  name: access-hbase
spec:
  template:
    spec:
      serviceAccountName: test-sa
      containers:
        - name: access-hbase
{% if test_scenario['values']['hbase'].find(",") > 0 %}
          image: "{{ test_scenario['values']['hbase'].split(',')[1] }}"
{% else %}
          image: oci.stackable.tech/sdp/hbase:{{ test_scenario['values']['hbase'] }}-stackable0.0.0-dev
{% endif %}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - /tmp/script/script.sh
{% if test_scenario['values']['listener-class'] == 'external-unstable' %}
          env:
            - name: MASTER_UI_0
              valueFrom:
                configMapKeyRef:
                  name: test-hbase-ui-endpoints
                  key: hbase.master-0.ui
            - name: MASTER_UI_1
              valueFrom:
                configMapKeyRef:
                  name: test-hbase-ui-endpoints
                  key: hbase.master-1.ui
            - name: REGIONSERVER_UI_0
              valueFrom:
                configMapKeyRef:
                  name: test-hbase-ui-endpoints
                  key: hbase.regionserver-0.ui
            - name: REGIONSERVER_UI_1
              valueFrom:
                configMapKeyRef:
                  name: test-hbase-ui-endpoints
                  key: hbase.regionserver-1.ui
            - name: RESTSERVER_UI_0
              valueFrom:
                configMapKeyRef:
                  name: test-hbase-ui-endpoints
                  key: hbase.restserver-0.ui
            - name: RESTSERVER_UI_1
              valueFrom:
                configMapKeyRef:
                  name: test-hbase-ui-endpoints
                  key: hbase.restserver-1.ui
{% endif %}
          volumeMounts:
            - name: script
              mountPath: /tmp/script
      volumes:
        - name: script
          configMap:
            name: access-hbase-script
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: access-hbase-script
data:
  script.sh: |
    set -euxo pipefail
{% if test_scenario['values']['listener-class'] == 'external-unstable' %}
    echo "Attempting to reach master at $MASTER_UI_0..."
    curl --retry 0 -f -s -o /dev/null -w "%{http_code}" "${MASTER_UI_0}" | grep 200
    echo "Attempting to reach region-server at $REGIONSERVER_UI_0..."
    curl --retry 0 -f -s -o /dev/null -w "%{http_code}" "${REGIONSERVER_UI_0}" | grep 200
    echo "Attempting to reach rest-server at $RESTSERVER_UI_0..."
    curl --retry 0 -f -s -o /dev/null -w "%{http_code}" "${RESTSERVER_UI_0}" | grep 200

    echo "Attempting to reach master at $MASTER_UI_1..."
    curl --retry 0 -f -s -o /dev/null -w "%{http_code}" "${MASTER_UI_1}" | grep 200
    echo "Attempting to reach region-server at $REGIONSERVER_UI_1..."
    curl --retry 0 -f -s -o /dev/null -w "%{http_code}" "${REGIONSERVER_UI_1}" | grep 200
    echo "Attempting to reach rest-server at $RESTSERVER_UI_1..."
    curl --retry 0 -f -s -o /dev/null -w "%{http_code}" "${RESTSERVER_UI_1}" | grep 200
{% endif %}
    echo "All tests successful!"
